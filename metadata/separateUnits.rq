PREFIX :<http://project-kitchenchef.fr/schema#>
PREFIX food:<http://project-kitchenchef.fr/food/data#>
PREFIX measurements: <http://project-kitchenchef.fr/measurements/data#>
PREFIX recipes: <http://project-kitchenchef.fr/recipes/data#>
CONSTRUCT {
?x ?y ?z

?imperialIngredient :hasImperialMeasurementUnit [
:unit ?imperialUnit ;
:quantity ?imperialQuantity
] .

?standardIngredient :hasStandardMeasurementUnit [
:unit ?standardUnit ;
:quantity ?standardQuantity
] .

?standardIngredientNoUnit :hasStandardMeasurementUnit [
:quantity ?standardQuantityNoUnit
] .


} WHERE {
# Adding ?name is probably not the cleanest,
#but since every ingredient has a name,
#it's allows to avoid funny results
{
SELECT DISTINCT * {
?imperialIngredient :unit ?imperialUnit ; :name ?name .
OPTIONAL {
?imperialIngredient :quantity ?imperialQuantity .
}

?imperialUnit a :ImperialMeasurementUnit .
}
} UNION {
SELECT * {
?standardIngredient :unit ?standardUnit ; :name ?name .
OPTIONAL {
?standardIngredient :quantity ?standardQuantityTmp .
}
BIND(IF(BOUND(?standardQuantityTmp), ?standardQuantityTmp, measurements:Some) AS ?standardQuantity)
FILTER NOT EXISTS { ?standardUnit a :ImperialMeasurementUnit }
FILTER NOT EXISTS { ?standardUnit a :MetricMeasurementUnit }
}
} UNION {
SELECT DISTINCT * {
?standardIngredientNoUnit :quantity ?standardQuantityNoUnit .
FILTER NOT EXISTS { ?standardIngredientNoUnit :unit ?standardUnitNoUnit }
}
} UNION {
?x ?y ?z

FILTER(?y != :unit && ?y != :quantity)
FILTER(!STRSTARTS(STR(?x), "http://project-kitchenchef.fr/schema#"))
FILTER(!STRSTARTS(STR(?x), "http://project-kitchenchef.fr/measurements/data#"))
FILTER(!STRSTARTS(STR(?y), "http://project-kitchenchef.fr/measurements/data#"))
FILTER NOT EXISTS { ?x a :UnitConversion }
}
}
